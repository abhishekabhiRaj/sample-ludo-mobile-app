{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport Constants from 'expo-constants';\nimport qs from 'qs';\nimport Linking from \"./LinkingModule\";\nvar manifest = Constants.manifest;\nvar USES_CUSTOM_SCHEME = Constants.appOwnership === 'standalone' && manifest.scheme;\nvar HOST_URI = manifest.hostUri;\n\nif (!HOST_URI && !USES_CUSTOM_SCHEME) {\n  HOST_URI = _removeScheme(Constants.linkingUri).replace(/\\/--($|\\/.*$)/, '');\n}\n\nvar IS_EXPO_HOSTED = HOST_URI && (/^(.*\\.)?(expo\\.io|exp\\.host|exp\\.direct|expo\\.test)(:.*)?(\\/.*)?$/.test(HOST_URI) || manifest.developer);\n\nfunction _removeScheme(url) {\n  return url.replace(/^[a-zA-Z0-9+.-]+:\\/\\//, '');\n}\n\nfunction _removePort(url) {\n  return url.replace(/(?=([a-zA-Z0-9+.-]+:\\/\\/)?[^/]):\\d+/, '');\n}\n\nfunction _removeLeadingSlash(url) {\n  return url.replace(/^\\//, '');\n}\n\nfunction _removeTrailingSlash(url) {\n  return url.replace(/\\/$/, '');\n}\n\nfunction _removeTrailingSlashAndQueryString(url) {\n  return url.replace(/\\/?\\?.*$/, '');\n}\n\nfunction makeUrl() {\n  var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var queryParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var scheme = 'exp';\n\n  if (Constants.appOwnership === 'standalone') {\n    scheme = manifest.scheme || manifest.detach && manifest.detach.scheme;\n  }\n\n  if (!scheme) {\n    throw new Error('Cannot make a deep link into a standalone app with no custom scheme defined');\n  }\n\n  var hostUri = HOST_URI || '';\n\n  if (USES_CUSTOM_SCHEME && IS_EXPO_HOSTED) {\n    hostUri = '';\n  }\n\n  if (path) {\n    if (IS_EXPO_HOSTED && hostUri) {\n      path = \"/--/\" + _removeLeadingSlash(path);\n    }\n\n    if (!path.startsWith('/') && hostUri) {\n      path = \"/\" + path;\n    } else if (path.startsWith('/') && !hostUri) {\n      path = path.substr(1);\n    }\n  } else {\n    path = '';\n  }\n\n  var queryString = '';\n  var queryStringMatchResult = hostUri.match(/(.*)\\?(.+)/);\n\n  if (queryStringMatchResult) {\n    hostUri = queryStringMatchResult[1];\n    queryString = queryStringMatchResult[2];\n    var paramsFromHostUri = {};\n\n    try {\n      var parsedParams = qs.parse(queryString);\n\n      if (typeof parsedParams === 'object') {\n        paramsFromHostUri = parsedParams;\n      }\n    } catch (e) {}\n\n    queryParams = _objectSpread({}, queryParams, {}, paramsFromHostUri);\n  }\n\n  queryString = qs.stringify(queryParams);\n\n  if (queryString) {\n    queryString = \"?\" + queryString;\n  }\n\n  hostUri = _removeTrailingSlash(hostUri);\n  return encodeURI(scheme + \"://\" + hostUri + path + queryString);\n}\n\nfunction parse(url) {\n  if (!url) {\n    throw new Error('parse cannot be called with a null value');\n  }\n\n  var decodedUrl = _removePort(decodeURI(url));\n\n  var path;\n  var queryParams = {};\n  var queryStringMatchResult = decodedUrl.match(/(.*)\\?(.+)/);\n\n  if (queryStringMatchResult) {\n    decodedUrl = queryStringMatchResult[1];\n    queryParams = qs.parse(queryStringMatchResult[2]);\n  }\n\n  var hostUri = HOST_URI || '';\n\n  var hostUriStripped = _removePort(_removeTrailingSlashAndQueryString(hostUri));\n\n  if (hostUriStripped && decodedUrl.indexOf(hostUriStripped) > -1) {\n    path = decodedUrl.substr(decodedUrl.indexOf(hostUriStripped) + hostUriStripped.length);\n  } else {\n    path = _removeScheme(decodedUrl);\n  }\n\n  path = _removeLeadingSlash(path);\n\n  if (IS_EXPO_HOSTED && !USES_CUSTOM_SCHEME && path.startsWith('--/')) {\n    path = path.substr(3);\n  } else if (path.indexOf('+') > -1) {\n    path = path.substr(path.indexOf('+') + 1);\n  }\n\n  return {\n    path: path,\n    queryParams: queryParams\n  };\n}\n\nfunction parseInitialURLAsync() {\n  var initialUrl;\n  return _regeneratorRuntime.async(function parseInitialURLAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(Linking.getInitialURL());\n\n        case 2:\n          initialUrl = _context.sent;\n\n          if (initialUrl) {\n            _context.next = 5;\n            break;\n          }\n\n          return _context.abrupt(\"return\", {\n            path: null,\n            queryParams: null\n          });\n\n        case 5:\n          return _context.abrupt(\"return\", parse(initialUrl));\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}\n\nvar newLinking = new Linking.constructor();\nnewLinking.makeUrl = makeUrl;\nnewLinking.parse = parse;\nnewLinking.parseInitialURLAsync = parseInitialURLAsync;\nexport default newLinking;","map":{"version":3,"sources":["../../src/Linking/Linking.ts"],"names":[],"mappings":"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","sourcesContent":["import Constants from 'expo-constants';\nimport qs from 'qs';\n\nimport { ParsedURL } from './Linking.types';\nimport Linking from './LinkingModule';\n\nconst { manifest } = Constants;\n\nconst USES_CUSTOM_SCHEME = Constants.appOwnership === 'standalone' && manifest.scheme;\n\nlet HOST_URI = manifest.hostUri;\nif (!HOST_URI && !USES_CUSTOM_SCHEME) {\n  // we're probably not using up-to-date xdl, so just fake it for now\n  // we have to remove the /--/ on the end since this will be inserted again later\n  HOST_URI = _removeScheme(Constants.linkingUri).replace(/\\/--($|\\/.*$)/, '');\n}\nconst IS_EXPO_HOSTED =\n  HOST_URI &&\n  (/^(.*\\.)?(expo\\.io|exp\\.host|exp\\.direct|expo\\.test)(:.*)?(\\/.*)?$/.test(HOST_URI) ||\n    manifest.developer);\n\nfunction _removeScheme(url) {\n  return url.replace(/^[a-zA-Z0-9+.-]+:\\/\\//, '');\n}\n\nfunction _removePort(url) {\n  return url.replace(/(?=([a-zA-Z0-9+.-]+:\\/\\/)?[^/]):\\d+/, '');\n}\n\nfunction _removeLeadingSlash(url) {\n  return url.replace(/^\\//, '');\n}\n\nfunction _removeTrailingSlash(url) {\n  return url.replace(/\\/$/, '');\n}\n\nfunction _removeTrailingSlashAndQueryString(url) {\n  return url.replace(/\\/?\\?.*$/, '');\n}\n\nfunction makeUrl(path: string = '', queryParams: Object = {}): string {\n  let scheme = 'exp';\n  if (Constants.appOwnership === 'standalone') {\n    scheme = manifest.scheme || (manifest.detach && manifest.detach.scheme);\n  }\n  if (!scheme) {\n    throw new Error('Cannot make a deep link into a standalone app with no custom scheme defined');\n  }\n\n  let hostUri = HOST_URI || '';\n  if (USES_CUSTOM_SCHEME && IS_EXPO_HOSTED) {\n    hostUri = '';\n  }\n\n  if (path) {\n    if (IS_EXPO_HOSTED && hostUri) {\n      path = `/--/${_removeLeadingSlash(path)}`;\n    }\n\n    if (!path.startsWith('/') && hostUri) {\n      path = `/${path}`;\n    } else if (path.startsWith('/') && !hostUri) {\n      path = path.substr(1);\n    }\n  } else {\n    path = '';\n  }\n\n  // merge user-provided query params with any that were already in the hostUri\n  // e.g. release-channel\n  let queryString = '';\n  let queryStringMatchResult = hostUri.match(/(.*)\\?(.+)/);\n  if (queryStringMatchResult) {\n    hostUri = queryStringMatchResult[1];\n    queryString = queryStringMatchResult[2];\n    let paramsFromHostUri = {};\n    try {\n      let parsedParams = qs.parse(queryString);\n      if (typeof parsedParams === 'object') {\n        paramsFromHostUri = parsedParams;\n      }\n    } catch (e) {}\n    queryParams = {\n      ...queryParams,\n      ...paramsFromHostUri,\n    };\n  }\n  queryString = qs.stringify(queryParams);\n  if (queryString) {\n    queryString = `?${queryString}`;\n  }\n\n  hostUri = _removeTrailingSlash(hostUri);\n\n  return encodeURI(`${scheme}://${hostUri}${path}${queryString}`);\n}\n\nfunction parse(url: string): ParsedURL {\n  if (!url) {\n    throw new Error('parse cannot be called with a null value');\n  }\n  // iOS client sometimes strips out the port from the initial URL\n  // even when it's included in the hostUri.\n  // This function should be able to handle both cases, so we strip off the port\n  // both here and from the hostUri.\n  let decodedUrl = _removePort(decodeURI(url));\n  let path: string;\n  let queryParams = {};\n\n  let queryStringMatchResult = decodedUrl.match(/(.*)\\?(.+)/);\n  if (queryStringMatchResult) {\n    decodedUrl = queryStringMatchResult[1];\n    queryParams = qs.parse(queryStringMatchResult[2]);\n  }\n\n  // strip off the hostUri from the host and path\n  let hostUri = HOST_URI || '';\n  let hostUriStripped = _removePort(_removeTrailingSlashAndQueryString(hostUri));\n  if (hostUriStripped && decodedUrl.indexOf(hostUriStripped) > -1) {\n    path = decodedUrl.substr(decodedUrl.indexOf(hostUriStripped) + hostUriStripped.length);\n  } else {\n    path = _removeScheme(decodedUrl);\n  }\n\n  path = _removeLeadingSlash(path);\n\n  if (IS_EXPO_HOSTED && !USES_CUSTOM_SCHEME && path.startsWith('--/')) {\n    path = path.substr(3);\n  } else if (path.indexOf('+') > -1) {\n    path = path.substr(path.indexOf('+') + 1);\n  }\n\n  return { path, queryParams };\n}\n\nasync function parseInitialURLAsync(): Promise<ParsedURL> {\n  const initialUrl = await Linking.getInitialURL();\n  if (!initialUrl) {\n    return {\n      path: null,\n      queryParams: null,\n    };\n  }\n\n  return parse(initialUrl);\n}\n\n// @ts-ignore fix this...\nlet newLinking = new Linking.constructor();\n\nnewLinking.makeUrl = makeUrl;\nnewLinking.parse = parse;\nnewLinking.parseInitialURLAsync = parseInitialURLAsync;\n\nexport default newLinking;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}